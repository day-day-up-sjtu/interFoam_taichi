void Foam::MULES::correct
(
    const RdeltaTType& rDeltaT,
    const RhoType& rho,       //alpha1
    volScalarField& psi,      //alpha1phi10
    const surfaceScalarField& phiCorr,  //talphaPhi1Corr0.ref()
    const SpType& Sp,         //oneField()
    const SuType& Su          //zeroield()
)
{
    Info<< "MULES: Correcting " << psi.name() << endl;

    const fvMesh& mesh = psi.mesh();

    scalarField psiIf(psi.size(), Zero);
    fvc::surfaceIntegrate(psiIf, phiCorr);

    if (mesh.moving())
    {
        psi.primitiveFieldRef() =
        (
            rho.field()*psi.primitiveField()*rDeltaT
          + Su.field()
          - psiIf
        )/(rho.field()*rDeltaT - Sp.field());
    }
    else
    {
        psi.primitiveFieldRef() =
        (
            rho.field()*psi.primitiveField()*rDeltaT
          + Su.field()
          - psiIf
        )/(rho.field()*rDeltaT - Sp.field());
    }

    psi.correctBoundaryConditions();
}
